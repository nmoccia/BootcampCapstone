@model BootcampCapstone.Event

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Event</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.title)
            @Html.ValidationMessageFor(model => model.title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.startDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.startDate)
            @Html.ValidationMessageFor(model => model.startDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.endDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.endDate)
            @Html.ValidationMessageFor(model => model.endDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.categoryID, "Category")
        </div>
        <div class="editor-field">
            @Html.DropDownList("categoryID", String.Empty)
            @Html.ValidationMessageFor(model => model.categoryID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.typeID, "Type")
        </div>
        <div class="editor-field">
            @Html.DropDownList("typeID", String.Empty)
            @Html.ValidationMessageFor(model => model.typeID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.eventDescription)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.eventDescription)
            @Html.ValidationMessageFor(model => model.eventDescription)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ownerID)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ownerID)
            @Html.ValidationMessageFor(model => model.ownerID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.logoPath)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.logoPath)
            @Html.ValidationMessageFor(model => model.logoPath)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.location)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.location)
            @Html.ValidationMessageFor(model => model.location)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.eventStatus)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.eventStatus)
            @Html.ValidationMessageFor(model => model.eventStatus)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
